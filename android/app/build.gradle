plugins {
    id "com.android.application"
    id 'com.google.gms.google-services'
    id "dev.flutter.flutter-gradle-plugin"
}

dependencies {
    // Import the Firebase BoM
    implementation platform('com.google.firebase:firebase-bom:33.13.0')

    // Firebase dependencies
    implementation 'com.google.firebase:firebase-analytics'

    // Add the dependencies for Flutter embedding
    implementation 'androidx.window:window:1.3.0'
    implementation 'androidx.window:window-java:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'

    // Fix androidx dependencies
    implementation 'androidx.core:core:1.10.1'
    implementation 'androidx.annotation:annotation:1.9.1'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.9.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    // Add this to fix the Kotlin plugin compatibility issues
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.22"

    // Let Flutter manage its own dependencies
    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.sri07.recipe_cart"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    defaultConfig {
        applicationId = "com.sri07.recipe_cart"
        minSdk = 23
        targetSdk = 34
        versionCode 2
        versionName "2.0.0"
        multiDexEnabled = true
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source = "../.."
}